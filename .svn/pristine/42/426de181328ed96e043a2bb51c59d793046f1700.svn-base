<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context.xsd  
                        http://www.springframework.org/schema/aop  
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                         http://www.springframework.org/schema/tx  
                        http://www.springframework.org/schema/tx/spring-tx.xsd">
         <!-- 第一步   扫描注解 -->
         
	<context:component-scan base-package="com.lanou.mapper"
        annotation-config="true" />
    <context:component-scan base-package="com.lanou.service"
        annotation-config="true" />
        
         <!-- 第二部读取jdbc.properties  -->
         <context:property-placeholder location="classpath:jdbc.properties"/>
         
         <!-- 第三部创建 datasource -->
       <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driverClass}" />
		</bean>
         <!-- 第四步创建sqlSessionfactory -->
         <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<!-- 自动扫描mapping.xml文件，**表示迭代查找 -->
			<property name="mapperLocations" value="classpath:com/lanou/mapper/**/*.xml" />
		</bean>
		
	<!-- mapper接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lanou.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
         <!-- 第五步  增加声明式事务 -->               
      <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>              
       
       
       <!-- cxf 配置 -->
	<import resource="spring-ws.xml"/>                 
</beans>